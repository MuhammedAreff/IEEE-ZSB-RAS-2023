
DIO_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000982  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a14  00000000  00000000  000009d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000004a1  00000000  00000000  000013ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 a2 04 	call	0x944	; 0x944 <main>
  64:	0c 94 bf 04 	jmp	0x97e	; 0x97e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_voidInit>:
#include "DIO_interface.h"
#include "DIO_private.h"
#include "DIO_config.h"

void DIO_voidInit         (void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	DIO_u8_DDRA_REG = Conc(DIO_u8_PA7_INTIAL_DIRECTION,DIO_u8_PA6_INTIAL_DIRECTION,DIO_u8_PA5_INTIAL_DIRECTION,DIO_u8_PA4_INTIAL_DIRECTION,
  74:	ea e3       	ldi	r30, 0x3A	; 58
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	10 82       	st	Z, r1
						   DIO_u8_PA3_INTIAL_DIRECTION,DIO_u8_PA2_INTIAL_DIRECTION,DIO_u8_PA1_INTIAL_DIRECTION,DIO_u8_PA0_INTIAL_DIRECTION);

	DIO_u8_DDRB_REG = Conc(DIO_u8_PB7_INTIAL_DIRECTION,DIO_u8_PB6_INTIAL_DIRECTION,DIO_u8_PB5_INTIAL_DIRECTION,DIO_u8_PB4_INTIAL_DIRECTION,
  7a:	e7 e3       	ldi	r30, 0x37	; 55
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	10 82       	st	Z, r1
						   DIO_u8_PB3_INTIAL_DIRECTION,DIO_u8_PB2_INTIAL_DIRECTION,DIO_u8_PB1_INTIAL_DIRECTION,DIO_u8_PB0_INTIAL_DIRECTION);

	DIO_u8_DDRC_REG = Conc(DIO_u8_PC7_INTIAL_DIRECTION,DIO_u8_PC6_INTIAL_DIRECTION,DIO_u8_PC5_INTIAL_DIRECTION,DIO_u8_PC4_INTIAL_DIRECTION,
  80:	e4 e3       	ldi	r30, 0x34	; 52
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	10 82       	st	Z, r1
						   DIO_u8_PC3_INTIAL_DIRECTION,DIO_u8_PC2_INTIAL_DIRECTION,DIO_u8_PC1_INTIAL_DIRECTION,DIO_u8_PC0_INTIAL_DIRECTION);

	DIO_u8_DDRD_REG = Conc(DIO_u8_PD7_INTIAL_DIRECTION,DIO_u8_PD6_INTIAL_DIRECTION,DIO_u8_PD5_INTIAL_DIRECTION,DIO_u8_PD4_INTIAL_DIRECTION,
  86:	e1 e3       	ldi	r30, 0x31	; 49
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	10 82       	st	Z, r1
						   DIO_u8_PD3_INTIAL_DIRECTION,DIO_u8_PD2_INTIAL_DIRECTION,DIO_u8_PD1_INTIAL_DIRECTION,DIO_u8_PD0_INTIAL_DIRECTION);						   

	DIO_u8_PORTA_REG = Conc(DIO_u8_PA7_INTIAL_VALUE,DIO_u8_PA6_INTIAL_VALUE,DIO_u8_PA5_INTIAL_VALUE,DIO_u8_PA4_INTIAL_VALUE,
  8c:	eb e3       	ldi	r30, 0x3B	; 59
  8e:	f0 e0       	ldi	r31, 0x00	; 0
  90:	10 82       	st	Z, r1
						   DIO_u8_PA3_INTIAL_VALUE,DIO_u8_PA2_INTIAL_VALUE,DIO_u8_PA1_INTIAL_VALUE,DIO_u8_PA0_INTIAL_VALUE);
											                    
	DIO_u8_PORTB_REG = Conc(DIO_u8_PB7_INTIAL_VALUE,DIO_u8_PB6_INTIAL_VALUE,DIO_u8_PB5_INTIAL_VALUE,DIO_u8_PB4_INTIAL_VALUE,
  92:	e8 e3       	ldi	r30, 0x38	; 56
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	10 82       	st	Z, r1
						   DIO_u8_PB3_INTIAL_VALUE,DIO_u8_PB2_INTIAL_VALUE,DIO_u8_PB1_INTIAL_VALUE,DIO_u8_PB0_INTIAL_VALUE);
											 
	DIO_u8_PORTC_REG = Conc(DIO_u8_PC7_INTIAL_VALUE,DIO_u8_PC6_INTIAL_VALUE,DIO_u8_PC5_INTIAL_VALUE,DIO_u8_PC4_INTIAL_VALUE,
  98:	e5 e3       	ldi	r30, 0x35	; 53
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	10 82       	st	Z, r1
						   DIO_u8_PC3_INTIAL_VALUE,DIO_u8_PC2_INTIAL_VALUE,DIO_u8_PC1_INTIAL_VALUE,DIO_u8_PC0_INTIAL_VALUE);
											 
	DIO_u8_PORTD_REG = Conc(DIO_u8_PD7_INTIAL_VALUE,DIO_u8_PD6_INTIAL_VALUE,DIO_u8_PD5_INTIAL_VALUE,DIO_u8_PD4_INTIAL_VALUE,
  9e:	e2 e3       	ldi	r30, 0x32	; 50
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	10 82       	st	Z, r1
						   DIO_u8_PD3_INTIAL_VALUE,DIO_u8_PD2_INTIAL_VALUE,DIO_u8_PD1_INTIAL_VALUE,DIO_u8_PD0_INTIAL_VALUE);
}
  a4:	cf 91       	pop	r28
  a6:	df 91       	pop	r29
  a8:	08 95       	ret

000000aa <DIO_u8SetPinDirection>:

u8  DIO_u8SetPinDirection (u8 Copy_u8PortId, u8 Copy_u8PinId ,u8 Copy_u8PinDirection)
{
  aa:	df 93       	push	r29
  ac:	cf 93       	push	r28
  ae:	cd b7       	in	r28, 0x3d	; 61
  b0:	de b7       	in	r29, 0x3e	; 62
  b2:	2e 97       	sbiw	r28, 0x0e	; 14
  b4:	0f b6       	in	r0, 0x3f	; 63
  b6:	f8 94       	cli
  b8:	de bf       	out	0x3e, r29	; 62
  ba:	0f be       	out	0x3f, r0	; 63
  bc:	cd bf       	out	0x3d, r28	; 61
  be:	8a 83       	std	Y+2, r24	; 0x02
  c0:	6b 83       	std	Y+3, r22	; 0x03
  c2:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = STD_TYPES_OK;
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_u8PortId <= DIO_u8_PORTD) && (Copy_u8PinId <= DIO_u8_PIN7) && ((Copy_u8PinDirection == DIO_u8_OUTPUT) || (Copy_u8PinDirection == DIO_u8_INPUT)))		
  c8:	8a 81       	ldd	r24, Y+2	; 0x02
  ca:	84 30       	cpi	r24, 0x04	; 4
  cc:	08 f0       	brcs	.+2      	; 0xd0 <DIO_u8SetPinDirection+0x26>
  ce:	0c c1       	rjmp	.+536    	; 0x2e8 <DIO_u8SetPinDirection+0x23e>
  d0:	8b 81       	ldd	r24, Y+3	; 0x03
  d2:	88 30       	cpi	r24, 0x08	; 8
  d4:	08 f0       	brcs	.+2      	; 0xd8 <DIO_u8SetPinDirection+0x2e>
  d6:	08 c1       	rjmp	.+528    	; 0x2e8 <DIO_u8SetPinDirection+0x23e>
  d8:	8c 81       	ldd	r24, Y+4	; 0x04
  da:	81 30       	cpi	r24, 0x01	; 1
  dc:	21 f0       	breq	.+8      	; 0xe6 <DIO_u8SetPinDirection+0x3c>
  de:	8c 81       	ldd	r24, Y+4	; 0x04
  e0:	88 23       	and	r24, r24
  e2:	09 f0       	breq	.+2      	; 0xe6 <DIO_u8SetPinDirection+0x3c>
  e4:	01 c1       	rjmp	.+514    	; 0x2e8 <DIO_u8SetPinDirection+0x23e>
	{
		switch (Copy_u8PortId)
  e6:	8a 81       	ldd	r24, Y+2	; 0x02
  e8:	28 2f       	mov	r18, r24
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	3e 87       	std	Y+14, r19	; 0x0e
  ee:	2d 87       	std	Y+13, r18	; 0x0d
  f0:	8d 85       	ldd	r24, Y+13	; 0x0d
  f2:	9e 85       	ldd	r25, Y+14	; 0x0e
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	91 05       	cpc	r25, r1
  f8:	09 f4       	brne	.+2      	; 0xfc <DIO_u8SetPinDirection+0x52>
  fa:	4f c0       	rjmp	.+158    	; 0x19a <DIO_u8SetPinDirection+0xf0>
  fc:	2d 85       	ldd	r18, Y+13	; 0x0d
  fe:	3e 85       	ldd	r19, Y+14	; 0x0e
 100:	22 30       	cpi	r18, 0x02	; 2
 102:	31 05       	cpc	r19, r1
 104:	2c f4       	brge	.+10     	; 0x110 <DIO_u8SetPinDirection+0x66>
 106:	8d 85       	ldd	r24, Y+13	; 0x0d
 108:	9e 85       	ldd	r25, Y+14	; 0x0e
 10a:	00 97       	sbiw	r24, 0x00	; 0
 10c:	71 f0       	breq	.+28     	; 0x12a <DIO_u8SetPinDirection+0x80>
 10e:	ed c0       	rjmp	.+474    	; 0x2ea <DIO_u8SetPinDirection+0x240>
 110:	2d 85       	ldd	r18, Y+13	; 0x0d
 112:	3e 85       	ldd	r19, Y+14	; 0x0e
 114:	22 30       	cpi	r18, 0x02	; 2
 116:	31 05       	cpc	r19, r1
 118:	09 f4       	brne	.+2      	; 0x11c <DIO_u8SetPinDirection+0x72>
 11a:	77 c0       	rjmp	.+238    	; 0x20a <DIO_u8SetPinDirection+0x160>
 11c:	8d 85       	ldd	r24, Y+13	; 0x0d
 11e:	9e 85       	ldd	r25, Y+14	; 0x0e
 120:	83 30       	cpi	r24, 0x03	; 3
 122:	91 05       	cpc	r25, r1
 124:	09 f4       	brne	.+2      	; 0x128 <DIO_u8SetPinDirection+0x7e>
 126:	a9 c0       	rjmp	.+338    	; 0x27a <DIO_u8SetPinDirection+0x1d0>
 128:	e0 c0       	rjmp	.+448    	; 0x2ea <DIO_u8SetPinDirection+0x240>
		{
			case DIO_u8_PORTA:
				switch (Copy_u8PinDirection)
 12a:	8c 81       	ldd	r24, Y+4	; 0x04
 12c:	28 2f       	mov	r18, r24
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	3c 87       	std	Y+12, r19	; 0x0c
 132:	2b 87       	std	Y+11, r18	; 0x0b
 134:	8b 85       	ldd	r24, Y+11	; 0x0b
 136:	9c 85       	ldd	r25, Y+12	; 0x0c
 138:	00 97       	sbiw	r24, 0x00	; 0
 13a:	d1 f0       	breq	.+52     	; 0x170 <DIO_u8SetPinDirection+0xc6>
 13c:	2b 85       	ldd	r18, Y+11	; 0x0b
 13e:	3c 85       	ldd	r19, Y+12	; 0x0c
 140:	21 30       	cpi	r18, 0x01	; 1
 142:	31 05       	cpc	r19, r1
 144:	09 f0       	breq	.+2      	; 0x148 <DIO_u8SetPinDirection+0x9e>
 146:	d1 c0       	rjmp	.+418    	; 0x2ea <DIO_u8SetPinDirection+0x240>
				{
					case DIO_u8_OUTPUT:SET_BIT(DIO_u8_DDRA_REG,Copy_u8PinId);break;
 148:	aa e3       	ldi	r26, 0x3A	; 58
 14a:	b0 e0       	ldi	r27, 0x00	; 0
 14c:	ea e3       	ldi	r30, 0x3A	; 58
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	80 81       	ld	r24, Z
 152:	48 2f       	mov	r20, r24
 154:	8b 81       	ldd	r24, Y+3	; 0x03
 156:	28 2f       	mov	r18, r24
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	02 2e       	mov	r0, r18
 160:	02 c0       	rjmp	.+4      	; 0x166 <DIO_u8SetPinDirection+0xbc>
 162:	88 0f       	add	r24, r24
 164:	99 1f       	adc	r25, r25
 166:	0a 94       	dec	r0
 168:	e2 f7       	brpl	.-8      	; 0x162 <DIO_u8SetPinDirection+0xb8>
 16a:	84 2b       	or	r24, r20
 16c:	8c 93       	st	X, r24
 16e:	bd c0       	rjmp	.+378    	; 0x2ea <DIO_u8SetPinDirection+0x240>
					case DIO_u8_INPUT: CLR_BIT(DIO_u8_DDRA_REG,Copy_u8PinId);break;
 170:	aa e3       	ldi	r26, 0x3A	; 58
 172:	b0 e0       	ldi	r27, 0x00	; 0
 174:	ea e3       	ldi	r30, 0x3A	; 58
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	80 81       	ld	r24, Z
 17a:	48 2f       	mov	r20, r24
 17c:	8b 81       	ldd	r24, Y+3	; 0x03
 17e:	28 2f       	mov	r18, r24
 180:	30 e0       	ldi	r19, 0x00	; 0
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	02 2e       	mov	r0, r18
 188:	02 c0       	rjmp	.+4      	; 0x18e <DIO_u8SetPinDirection+0xe4>
 18a:	88 0f       	add	r24, r24
 18c:	99 1f       	adc	r25, r25
 18e:	0a 94       	dec	r0
 190:	e2 f7       	brpl	.-8      	; 0x18a <DIO_u8SetPinDirection+0xe0>
 192:	80 95       	com	r24
 194:	84 23       	and	r24, r20
 196:	8c 93       	st	X, r24
 198:	a8 c0       	rjmp	.+336    	; 0x2ea <DIO_u8SetPinDirection+0x240>
				}
			break;
			case DIO_u8_PORTB:
				switch (Copy_u8PinDirection)
 19a:	8c 81       	ldd	r24, Y+4	; 0x04
 19c:	28 2f       	mov	r18, r24
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	3a 87       	std	Y+10, r19	; 0x0a
 1a2:	29 87       	std	Y+9, r18	; 0x09
 1a4:	89 85       	ldd	r24, Y+9	; 0x09
 1a6:	9a 85       	ldd	r25, Y+10	; 0x0a
 1a8:	00 97       	sbiw	r24, 0x00	; 0
 1aa:	d1 f0       	breq	.+52     	; 0x1e0 <DIO_u8SetPinDirection+0x136>
 1ac:	29 85       	ldd	r18, Y+9	; 0x09
 1ae:	3a 85       	ldd	r19, Y+10	; 0x0a
 1b0:	21 30       	cpi	r18, 0x01	; 1
 1b2:	31 05       	cpc	r19, r1
 1b4:	09 f0       	breq	.+2      	; 0x1b8 <DIO_u8SetPinDirection+0x10e>
 1b6:	99 c0       	rjmp	.+306    	; 0x2ea <DIO_u8SetPinDirection+0x240>
				{
					case DIO_u8_OUTPUT:SET_BIT(DIO_u8_DDRB_REG,Copy_u8PinId);break;
 1b8:	a7 e3       	ldi	r26, 0x37	; 55
 1ba:	b0 e0       	ldi	r27, 0x00	; 0
 1bc:	e7 e3       	ldi	r30, 0x37	; 55
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	48 2f       	mov	r20, r24
 1c4:	8b 81       	ldd	r24, Y+3	; 0x03
 1c6:	28 2f       	mov	r18, r24
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	02 2e       	mov	r0, r18
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <DIO_u8SetPinDirection+0x12c>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	0a 94       	dec	r0
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <DIO_u8SetPinDirection+0x128>
 1da:	84 2b       	or	r24, r20
 1dc:	8c 93       	st	X, r24
 1de:	85 c0       	rjmp	.+266    	; 0x2ea <DIO_u8SetPinDirection+0x240>
					case DIO_u8_INPUT: CLR_BIT(DIO_u8_DDRB_REG,Copy_u8PinId);break;
 1e0:	a7 e3       	ldi	r26, 0x37	; 55
 1e2:	b0 e0       	ldi	r27, 0x00	; 0
 1e4:	e7 e3       	ldi	r30, 0x37	; 55
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	48 2f       	mov	r20, r24
 1ec:	8b 81       	ldd	r24, Y+3	; 0x03
 1ee:	28 2f       	mov	r18, r24
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	02 2e       	mov	r0, r18
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <DIO_u8SetPinDirection+0x154>
 1fa:	88 0f       	add	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	0a 94       	dec	r0
 200:	e2 f7       	brpl	.-8      	; 0x1fa <DIO_u8SetPinDirection+0x150>
 202:	80 95       	com	r24
 204:	84 23       	and	r24, r20
 206:	8c 93       	st	X, r24
 208:	70 c0       	rjmp	.+224    	; 0x2ea <DIO_u8SetPinDirection+0x240>
				}
			break;
			case DIO_u8_PORTC:
				switch (Copy_u8PinDirection)
 20a:	8c 81       	ldd	r24, Y+4	; 0x04
 20c:	28 2f       	mov	r18, r24
 20e:	30 e0       	ldi	r19, 0x00	; 0
 210:	38 87       	std	Y+8, r19	; 0x08
 212:	2f 83       	std	Y+7, r18	; 0x07
 214:	8f 81       	ldd	r24, Y+7	; 0x07
 216:	98 85       	ldd	r25, Y+8	; 0x08
 218:	00 97       	sbiw	r24, 0x00	; 0
 21a:	d1 f0       	breq	.+52     	; 0x250 <DIO_u8SetPinDirection+0x1a6>
 21c:	2f 81       	ldd	r18, Y+7	; 0x07
 21e:	38 85       	ldd	r19, Y+8	; 0x08
 220:	21 30       	cpi	r18, 0x01	; 1
 222:	31 05       	cpc	r19, r1
 224:	09 f0       	breq	.+2      	; 0x228 <DIO_u8SetPinDirection+0x17e>
 226:	61 c0       	rjmp	.+194    	; 0x2ea <DIO_u8SetPinDirection+0x240>
				{
					case DIO_u8_OUTPUT:SET_BIT(DIO_u8_DDRC_REG,Copy_u8PinId);break;
 228:	a4 e3       	ldi	r26, 0x34	; 52
 22a:	b0 e0       	ldi	r27, 0x00	; 0
 22c:	e4 e3       	ldi	r30, 0x34	; 52
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	80 81       	ld	r24, Z
 232:	48 2f       	mov	r20, r24
 234:	8b 81       	ldd	r24, Y+3	; 0x03
 236:	28 2f       	mov	r18, r24
 238:	30 e0       	ldi	r19, 0x00	; 0
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	02 2e       	mov	r0, r18
 240:	02 c0       	rjmp	.+4      	; 0x246 <DIO_u8SetPinDirection+0x19c>
 242:	88 0f       	add	r24, r24
 244:	99 1f       	adc	r25, r25
 246:	0a 94       	dec	r0
 248:	e2 f7       	brpl	.-8      	; 0x242 <DIO_u8SetPinDirection+0x198>
 24a:	84 2b       	or	r24, r20
 24c:	8c 93       	st	X, r24
 24e:	4d c0       	rjmp	.+154    	; 0x2ea <DIO_u8SetPinDirection+0x240>
					case DIO_u8_INPUT: CLR_BIT(DIO_u8_DDRC_REG,Copy_u8PinId);break;
 250:	a4 e3       	ldi	r26, 0x34	; 52
 252:	b0 e0       	ldi	r27, 0x00	; 0
 254:	e4 e3       	ldi	r30, 0x34	; 52
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	48 2f       	mov	r20, r24
 25c:	8b 81       	ldd	r24, Y+3	; 0x03
 25e:	28 2f       	mov	r18, r24
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	02 2e       	mov	r0, r18
 268:	02 c0       	rjmp	.+4      	; 0x26e <DIO_u8SetPinDirection+0x1c4>
 26a:	88 0f       	add	r24, r24
 26c:	99 1f       	adc	r25, r25
 26e:	0a 94       	dec	r0
 270:	e2 f7       	brpl	.-8      	; 0x26a <DIO_u8SetPinDirection+0x1c0>
 272:	80 95       	com	r24
 274:	84 23       	and	r24, r20
 276:	8c 93       	st	X, r24
 278:	38 c0       	rjmp	.+112    	; 0x2ea <DIO_u8SetPinDirection+0x240>
				}
			break;
			case DIO_u8_PORTD:
				switch (Copy_u8PinDirection)
 27a:	8c 81       	ldd	r24, Y+4	; 0x04
 27c:	28 2f       	mov	r18, r24
 27e:	30 e0       	ldi	r19, 0x00	; 0
 280:	3e 83       	std	Y+6, r19	; 0x06
 282:	2d 83       	std	Y+5, r18	; 0x05
 284:	8d 81       	ldd	r24, Y+5	; 0x05
 286:	9e 81       	ldd	r25, Y+6	; 0x06
 288:	00 97       	sbiw	r24, 0x00	; 0
 28a:	c9 f0       	breq	.+50     	; 0x2be <DIO_u8SetPinDirection+0x214>
 28c:	2d 81       	ldd	r18, Y+5	; 0x05
 28e:	3e 81       	ldd	r19, Y+6	; 0x06
 290:	21 30       	cpi	r18, 0x01	; 1
 292:	31 05       	cpc	r19, r1
 294:	51 f5       	brne	.+84     	; 0x2ea <DIO_u8SetPinDirection+0x240>
				{
					case DIO_u8_OUTPUT:SET_BIT(DIO_u8_DDRD_REG,Copy_u8PinId);break;
 296:	a1 e3       	ldi	r26, 0x31	; 49
 298:	b0 e0       	ldi	r27, 0x00	; 0
 29a:	e1 e3       	ldi	r30, 0x31	; 49
 29c:	f0 e0       	ldi	r31, 0x00	; 0
 29e:	80 81       	ld	r24, Z
 2a0:	48 2f       	mov	r20, r24
 2a2:	8b 81       	ldd	r24, Y+3	; 0x03
 2a4:	28 2f       	mov	r18, r24
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	02 2e       	mov	r0, r18
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <DIO_u8SetPinDirection+0x20a>
 2b0:	88 0f       	add	r24, r24
 2b2:	99 1f       	adc	r25, r25
 2b4:	0a 94       	dec	r0
 2b6:	e2 f7       	brpl	.-8      	; 0x2b0 <DIO_u8SetPinDirection+0x206>
 2b8:	84 2b       	or	r24, r20
 2ba:	8c 93       	st	X, r24
 2bc:	16 c0       	rjmp	.+44     	; 0x2ea <DIO_u8SetPinDirection+0x240>
					case DIO_u8_INPUT: CLR_BIT(DIO_u8_DDRD_REG,Copy_u8PinId);break;
 2be:	a1 e3       	ldi	r26, 0x31	; 49
 2c0:	b0 e0       	ldi	r27, 0x00	; 0
 2c2:	e1 e3       	ldi	r30, 0x31	; 49
 2c4:	f0 e0       	ldi	r31, 0x00	; 0
 2c6:	80 81       	ld	r24, Z
 2c8:	48 2f       	mov	r20, r24
 2ca:	8b 81       	ldd	r24, Y+3	; 0x03
 2cc:	28 2f       	mov	r18, r24
 2ce:	30 e0       	ldi	r19, 0x00	; 0
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	02 2e       	mov	r0, r18
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <DIO_u8SetPinDirection+0x232>
 2d8:	88 0f       	add	r24, r24
 2da:	99 1f       	adc	r25, r25
 2dc:	0a 94       	dec	r0
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <DIO_u8SetPinDirection+0x22e>
 2e0:	80 95       	com	r24
 2e2:	84 23       	and	r24, r20
 2e4:	8c 93       	st	X, r24
 2e6:	01 c0       	rjmp	.+2      	; 0x2ea <DIO_u8SetPinDirection+0x240>
			break;			
		}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
 2e8:	19 82       	std	Y+1, r1	; 0x01
	}
	
	return Local_u8ErrorState;
 2ea:	89 81       	ldd	r24, Y+1	; 0x01
}
 2ec:	2e 96       	adiw	r28, 0x0e	; 14
 2ee:	0f b6       	in	r0, 0x3f	; 63
 2f0:	f8 94       	cli
 2f2:	de bf       	out	0x3e, r29	; 62
 2f4:	0f be       	out	0x3f, r0	; 63
 2f6:	cd bf       	out	0x3d, r28	; 61
 2f8:	cf 91       	pop	r28
 2fa:	df 91       	pop	r29
 2fc:	08 95       	ret

000002fe <DIO_u8SetPinValue>:

u8  DIO_u8SetPinValue     (u8 Copy_u8PortId, u8 Copy_u8PinId ,u8 Copy_u8PinValue)
{
 2fe:	df 93       	push	r29
 300:	cf 93       	push	r28
 302:	cd b7       	in	r28, 0x3d	; 61
 304:	de b7       	in	r29, 0x3e	; 62
 306:	2e 97       	sbiw	r28, 0x0e	; 14
 308:	0f b6       	in	r0, 0x3f	; 63
 30a:	f8 94       	cli
 30c:	de bf       	out	0x3e, r29	; 62
 30e:	0f be       	out	0x3f, r0	; 63
 310:	cd bf       	out	0x3d, r28	; 61
 312:	8a 83       	std	Y+2, r24	; 0x02
 314:	6b 83       	std	Y+3, r22	; 0x03
 316:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = STD_TYPES_OK;
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8PinId <= DIO_u8_PIN7)
 31c:	8b 81       	ldd	r24, Y+3	; 0x03
 31e:	88 30       	cpi	r24, 0x08	; 8
 320:	08 f0       	brcs	.+2      	; 0x324 <DIO_u8SetPinValue+0x26>
 322:	08 c1       	rjmp	.+528    	; 0x534 <DIO_u8SetPinValue+0x236>
	{
		switch (Copy_u8PortId)
 324:	8a 81       	ldd	r24, Y+2	; 0x02
 326:	28 2f       	mov	r18, r24
 328:	30 e0       	ldi	r19, 0x00	; 0
 32a:	3e 87       	std	Y+14, r19	; 0x0e
 32c:	2d 87       	std	Y+13, r18	; 0x0d
 32e:	8d 85       	ldd	r24, Y+13	; 0x0d
 330:	9e 85       	ldd	r25, Y+14	; 0x0e
 332:	81 30       	cpi	r24, 0x01	; 1
 334:	91 05       	cpc	r25, r1
 336:	09 f4       	brne	.+2      	; 0x33a <DIO_u8SetPinValue+0x3c>
 338:	50 c0       	rjmp	.+160    	; 0x3da <DIO_u8SetPinValue+0xdc>
 33a:	2d 85       	ldd	r18, Y+13	; 0x0d
 33c:	3e 85       	ldd	r19, Y+14	; 0x0e
 33e:	22 30       	cpi	r18, 0x02	; 2
 340:	31 05       	cpc	r19, r1
 342:	2c f4       	brge	.+10     	; 0x34e <DIO_u8SetPinValue+0x50>
 344:	8d 85       	ldd	r24, Y+13	; 0x0d
 346:	9e 85       	ldd	r25, Y+14	; 0x0e
 348:	00 97       	sbiw	r24, 0x00	; 0
 34a:	71 f0       	breq	.+28     	; 0x368 <DIO_u8SetPinValue+0x6a>
 34c:	f1 c0       	rjmp	.+482    	; 0x530 <DIO_u8SetPinValue+0x232>
 34e:	2d 85       	ldd	r18, Y+13	; 0x0d
 350:	3e 85       	ldd	r19, Y+14	; 0x0e
 352:	22 30       	cpi	r18, 0x02	; 2
 354:	31 05       	cpc	r19, r1
 356:	09 f4       	brne	.+2      	; 0x35a <DIO_u8SetPinValue+0x5c>
 358:	79 c0       	rjmp	.+242    	; 0x44c <DIO_u8SetPinValue+0x14e>
 35a:	8d 85       	ldd	r24, Y+13	; 0x0d
 35c:	9e 85       	ldd	r25, Y+14	; 0x0e
 35e:	83 30       	cpi	r24, 0x03	; 3
 360:	91 05       	cpc	r25, r1
 362:	09 f4       	brne	.+2      	; 0x366 <DIO_u8SetPinValue+0x68>
 364:	ac c0       	rjmp	.+344    	; 0x4be <DIO_u8SetPinValue+0x1c0>
 366:	e4 c0       	rjmp	.+456    	; 0x530 <DIO_u8SetPinValue+0x232>
		{
			case DIO_u8_PORTA:
				switch (Copy_u8PinValue)
 368:	8c 81       	ldd	r24, Y+4	; 0x04
 36a:	28 2f       	mov	r18, r24
 36c:	30 e0       	ldi	r19, 0x00	; 0
 36e:	3c 87       	std	Y+12, r19	; 0x0c
 370:	2b 87       	std	Y+11, r18	; 0x0b
 372:	8b 85       	ldd	r24, Y+11	; 0x0b
 374:	9c 85       	ldd	r25, Y+12	; 0x0c
 376:	00 97       	sbiw	r24, 0x00	; 0
 378:	c9 f0       	breq	.+50     	; 0x3ac <DIO_u8SetPinValue+0xae>
 37a:	2b 85       	ldd	r18, Y+11	; 0x0b
 37c:	3c 85       	ldd	r19, Y+12	; 0x0c
 37e:	21 30       	cpi	r18, 0x01	; 1
 380:	31 05       	cpc	r19, r1
 382:	49 f5       	brne	.+82     	; 0x3d6 <DIO_u8SetPinValue+0xd8>
				{
					case DIO_u8_HIGH:SET_BIT(DIO_u8_PORTA_REG,Copy_u8PinId);break;
 384:	ab e3       	ldi	r26, 0x3B	; 59
 386:	b0 e0       	ldi	r27, 0x00	; 0
 388:	eb e3       	ldi	r30, 0x3B	; 59
 38a:	f0 e0       	ldi	r31, 0x00	; 0
 38c:	80 81       	ld	r24, Z
 38e:	48 2f       	mov	r20, r24
 390:	8b 81       	ldd	r24, Y+3	; 0x03
 392:	28 2f       	mov	r18, r24
 394:	30 e0       	ldi	r19, 0x00	; 0
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	02 2e       	mov	r0, r18
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <DIO_u8SetPinValue+0xa4>
 39e:	88 0f       	add	r24, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	0a 94       	dec	r0
 3a4:	e2 f7       	brpl	.-8      	; 0x39e <DIO_u8SetPinValue+0xa0>
 3a6:	84 2b       	or	r24, r20
 3a8:	8c 93       	st	X, r24
 3aa:	c5 c0       	rjmp	.+394    	; 0x536 <DIO_u8SetPinValue+0x238>
					case DIO_u8_LOW: CLR_BIT(DIO_u8_PORTA_REG,Copy_u8PinId);break;
 3ac:	ab e3       	ldi	r26, 0x3B	; 59
 3ae:	b0 e0       	ldi	r27, 0x00	; 0
 3b0:	eb e3       	ldi	r30, 0x3B	; 59
 3b2:	f0 e0       	ldi	r31, 0x00	; 0
 3b4:	80 81       	ld	r24, Z
 3b6:	48 2f       	mov	r20, r24
 3b8:	8b 81       	ldd	r24, Y+3	; 0x03
 3ba:	28 2f       	mov	r18, r24
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	02 2e       	mov	r0, r18
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <DIO_u8SetPinValue+0xcc>
 3c6:	88 0f       	add	r24, r24
 3c8:	99 1f       	adc	r25, r25
 3ca:	0a 94       	dec	r0
 3cc:	e2 f7       	brpl	.-8      	; 0x3c6 <DIO_u8SetPinValue+0xc8>
 3ce:	80 95       	com	r24
 3d0:	84 23       	and	r24, r20
 3d2:	8c 93       	st	X, r24
 3d4:	b0 c0       	rjmp	.+352    	; 0x536 <DIO_u8SetPinValue+0x238>
					default : Local_u8ErrorState = STD_TYPES_NOK;
 3d6:	19 82       	std	Y+1, r1	; 0x01
 3d8:	ae c0       	rjmp	.+348    	; 0x536 <DIO_u8SetPinValue+0x238>
				}
			break;
			case DIO_u8_PORTB:
				switch (Copy_u8PinValue)
 3da:	8c 81       	ldd	r24, Y+4	; 0x04
 3dc:	28 2f       	mov	r18, r24
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	3a 87       	std	Y+10, r19	; 0x0a
 3e2:	29 87       	std	Y+9, r18	; 0x09
 3e4:	89 85       	ldd	r24, Y+9	; 0x09
 3e6:	9a 85       	ldd	r25, Y+10	; 0x0a
 3e8:	00 97       	sbiw	r24, 0x00	; 0
 3ea:	c9 f0       	breq	.+50     	; 0x41e <DIO_u8SetPinValue+0x120>
 3ec:	29 85       	ldd	r18, Y+9	; 0x09
 3ee:	3a 85       	ldd	r19, Y+10	; 0x0a
 3f0:	21 30       	cpi	r18, 0x01	; 1
 3f2:	31 05       	cpc	r19, r1
 3f4:	49 f5       	brne	.+82     	; 0x448 <DIO_u8SetPinValue+0x14a>
				{
					case DIO_u8_HIGH:SET_BIT(DIO_u8_PORTB_REG,Copy_u8PinId);break;
 3f6:	a8 e3       	ldi	r26, 0x38	; 56
 3f8:	b0 e0       	ldi	r27, 0x00	; 0
 3fa:	e8 e3       	ldi	r30, 0x38	; 56
 3fc:	f0 e0       	ldi	r31, 0x00	; 0
 3fe:	80 81       	ld	r24, Z
 400:	48 2f       	mov	r20, r24
 402:	8b 81       	ldd	r24, Y+3	; 0x03
 404:	28 2f       	mov	r18, r24
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	81 e0       	ldi	r24, 0x01	; 1
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	02 2e       	mov	r0, r18
 40e:	02 c0       	rjmp	.+4      	; 0x414 <DIO_u8SetPinValue+0x116>
 410:	88 0f       	add	r24, r24
 412:	99 1f       	adc	r25, r25
 414:	0a 94       	dec	r0
 416:	e2 f7       	brpl	.-8      	; 0x410 <DIO_u8SetPinValue+0x112>
 418:	84 2b       	or	r24, r20
 41a:	8c 93       	st	X, r24
 41c:	8c c0       	rjmp	.+280    	; 0x536 <DIO_u8SetPinValue+0x238>
					case DIO_u8_LOW: CLR_BIT(DIO_u8_PORTB_REG,Copy_u8PinId);break;
 41e:	a8 e3       	ldi	r26, 0x38	; 56
 420:	b0 e0       	ldi	r27, 0x00	; 0
 422:	e8 e3       	ldi	r30, 0x38	; 56
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	80 81       	ld	r24, Z
 428:	48 2f       	mov	r20, r24
 42a:	8b 81       	ldd	r24, Y+3	; 0x03
 42c:	28 2f       	mov	r18, r24
 42e:	30 e0       	ldi	r19, 0x00	; 0
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	02 2e       	mov	r0, r18
 436:	02 c0       	rjmp	.+4      	; 0x43c <DIO_u8SetPinValue+0x13e>
 438:	88 0f       	add	r24, r24
 43a:	99 1f       	adc	r25, r25
 43c:	0a 94       	dec	r0
 43e:	e2 f7       	brpl	.-8      	; 0x438 <DIO_u8SetPinValue+0x13a>
 440:	80 95       	com	r24
 442:	84 23       	and	r24, r20
 444:	8c 93       	st	X, r24
 446:	77 c0       	rjmp	.+238    	; 0x536 <DIO_u8SetPinValue+0x238>
					default : Local_u8ErrorState = STD_TYPES_NOK;
 448:	19 82       	std	Y+1, r1	; 0x01
 44a:	75 c0       	rjmp	.+234    	; 0x536 <DIO_u8SetPinValue+0x238>
				}		
			break;
			case DIO_u8_PORTC:
				switch (Copy_u8PinValue)
 44c:	8c 81       	ldd	r24, Y+4	; 0x04
 44e:	28 2f       	mov	r18, r24
 450:	30 e0       	ldi	r19, 0x00	; 0
 452:	38 87       	std	Y+8, r19	; 0x08
 454:	2f 83       	std	Y+7, r18	; 0x07
 456:	8f 81       	ldd	r24, Y+7	; 0x07
 458:	98 85       	ldd	r25, Y+8	; 0x08
 45a:	00 97       	sbiw	r24, 0x00	; 0
 45c:	c9 f0       	breq	.+50     	; 0x490 <DIO_u8SetPinValue+0x192>
 45e:	2f 81       	ldd	r18, Y+7	; 0x07
 460:	38 85       	ldd	r19, Y+8	; 0x08
 462:	21 30       	cpi	r18, 0x01	; 1
 464:	31 05       	cpc	r19, r1
 466:	49 f5       	brne	.+82     	; 0x4ba <DIO_u8SetPinValue+0x1bc>
				{
					case DIO_u8_HIGH:SET_BIT(DIO_u8_PORTC_REG,Copy_u8PinId);break;
 468:	a5 e3       	ldi	r26, 0x35	; 53
 46a:	b0 e0       	ldi	r27, 0x00	; 0
 46c:	e5 e3       	ldi	r30, 0x35	; 53
 46e:	f0 e0       	ldi	r31, 0x00	; 0
 470:	80 81       	ld	r24, Z
 472:	48 2f       	mov	r20, r24
 474:	8b 81       	ldd	r24, Y+3	; 0x03
 476:	28 2f       	mov	r18, r24
 478:	30 e0       	ldi	r19, 0x00	; 0
 47a:	81 e0       	ldi	r24, 0x01	; 1
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	02 2e       	mov	r0, r18
 480:	02 c0       	rjmp	.+4      	; 0x486 <DIO_u8SetPinValue+0x188>
 482:	88 0f       	add	r24, r24
 484:	99 1f       	adc	r25, r25
 486:	0a 94       	dec	r0
 488:	e2 f7       	brpl	.-8      	; 0x482 <DIO_u8SetPinValue+0x184>
 48a:	84 2b       	or	r24, r20
 48c:	8c 93       	st	X, r24
 48e:	53 c0       	rjmp	.+166    	; 0x536 <DIO_u8SetPinValue+0x238>
					case DIO_u8_LOW: CLR_BIT(DIO_u8_PORTC_REG,Copy_u8PinId);break;
 490:	a5 e3       	ldi	r26, 0x35	; 53
 492:	b0 e0       	ldi	r27, 0x00	; 0
 494:	e5 e3       	ldi	r30, 0x35	; 53
 496:	f0 e0       	ldi	r31, 0x00	; 0
 498:	80 81       	ld	r24, Z
 49a:	48 2f       	mov	r20, r24
 49c:	8b 81       	ldd	r24, Y+3	; 0x03
 49e:	28 2f       	mov	r18, r24
 4a0:	30 e0       	ldi	r19, 0x00	; 0
 4a2:	81 e0       	ldi	r24, 0x01	; 1
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	02 2e       	mov	r0, r18
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <DIO_u8SetPinValue+0x1b0>
 4aa:	88 0f       	add	r24, r24
 4ac:	99 1f       	adc	r25, r25
 4ae:	0a 94       	dec	r0
 4b0:	e2 f7       	brpl	.-8      	; 0x4aa <DIO_u8SetPinValue+0x1ac>
 4b2:	80 95       	com	r24
 4b4:	84 23       	and	r24, r20
 4b6:	8c 93       	st	X, r24
 4b8:	3e c0       	rjmp	.+124    	; 0x536 <DIO_u8SetPinValue+0x238>
					default : Local_u8ErrorState = STD_TYPES_NOK;
 4ba:	19 82       	std	Y+1, r1	; 0x01
 4bc:	3c c0       	rjmp	.+120    	; 0x536 <DIO_u8SetPinValue+0x238>
				}		
			break;
			case DIO_u8_PORTD:
				switch (Copy_u8PinValue)
 4be:	8c 81       	ldd	r24, Y+4	; 0x04
 4c0:	28 2f       	mov	r18, r24
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	3e 83       	std	Y+6, r19	; 0x06
 4c6:	2d 83       	std	Y+5, r18	; 0x05
 4c8:	8d 81       	ldd	r24, Y+5	; 0x05
 4ca:	9e 81       	ldd	r25, Y+6	; 0x06
 4cc:	00 97       	sbiw	r24, 0x00	; 0
 4ce:	c9 f0       	breq	.+50     	; 0x502 <DIO_u8SetPinValue+0x204>
 4d0:	2d 81       	ldd	r18, Y+5	; 0x05
 4d2:	3e 81       	ldd	r19, Y+6	; 0x06
 4d4:	21 30       	cpi	r18, 0x01	; 1
 4d6:	31 05       	cpc	r19, r1
 4d8:	49 f5       	brne	.+82     	; 0x52c <DIO_u8SetPinValue+0x22e>
				{
					case DIO_u8_HIGH:SET_BIT(DIO_u8_PORTD_REG,Copy_u8PinId);break;
 4da:	a2 e3       	ldi	r26, 0x32	; 50
 4dc:	b0 e0       	ldi	r27, 0x00	; 0
 4de:	e2 e3       	ldi	r30, 0x32	; 50
 4e0:	f0 e0       	ldi	r31, 0x00	; 0
 4e2:	80 81       	ld	r24, Z
 4e4:	48 2f       	mov	r20, r24
 4e6:	8b 81       	ldd	r24, Y+3	; 0x03
 4e8:	28 2f       	mov	r18, r24
 4ea:	30 e0       	ldi	r19, 0x00	; 0
 4ec:	81 e0       	ldi	r24, 0x01	; 1
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	02 2e       	mov	r0, r18
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <DIO_u8SetPinValue+0x1fa>
 4f4:	88 0f       	add	r24, r24
 4f6:	99 1f       	adc	r25, r25
 4f8:	0a 94       	dec	r0
 4fa:	e2 f7       	brpl	.-8      	; 0x4f4 <DIO_u8SetPinValue+0x1f6>
 4fc:	84 2b       	or	r24, r20
 4fe:	8c 93       	st	X, r24
 500:	1a c0       	rjmp	.+52     	; 0x536 <DIO_u8SetPinValue+0x238>
					case DIO_u8_LOW: CLR_BIT(DIO_u8_PORTD_REG,Copy_u8PinId);break;
 502:	a2 e3       	ldi	r26, 0x32	; 50
 504:	b0 e0       	ldi	r27, 0x00	; 0
 506:	e2 e3       	ldi	r30, 0x32	; 50
 508:	f0 e0       	ldi	r31, 0x00	; 0
 50a:	80 81       	ld	r24, Z
 50c:	48 2f       	mov	r20, r24
 50e:	8b 81       	ldd	r24, Y+3	; 0x03
 510:	28 2f       	mov	r18, r24
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	81 e0       	ldi	r24, 0x01	; 1
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	02 2e       	mov	r0, r18
 51a:	02 c0       	rjmp	.+4      	; 0x520 <DIO_u8SetPinValue+0x222>
 51c:	88 0f       	add	r24, r24
 51e:	99 1f       	adc	r25, r25
 520:	0a 94       	dec	r0
 522:	e2 f7       	brpl	.-8      	; 0x51c <DIO_u8SetPinValue+0x21e>
 524:	80 95       	com	r24
 526:	84 23       	and	r24, r20
 528:	8c 93       	st	X, r24
 52a:	05 c0       	rjmp	.+10     	; 0x536 <DIO_u8SetPinValue+0x238>
					default : Local_u8ErrorState = STD_TYPES_NOK;
 52c:	19 82       	std	Y+1, r1	; 0x01
 52e:	03 c0       	rjmp	.+6      	; 0x536 <DIO_u8SetPinValue+0x238>
				}		
			break;
			default :
				Local_u8ErrorState = STD_TYPES_NOK;
 530:	19 82       	std	Y+1, r1	; 0x01
 532:	01 c0       	rjmp	.+2      	; 0x536 <DIO_u8SetPinValue+0x238>
		}
			
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
 534:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
 536:	89 81       	ldd	r24, Y+1	; 0x01
}
 538:	2e 96       	adiw	r28, 0x0e	; 14
 53a:	0f b6       	in	r0, 0x3f	; 63
 53c:	f8 94       	cli
 53e:	de bf       	out	0x3e, r29	; 62
 540:	0f be       	out	0x3f, r0	; 63
 542:	cd bf       	out	0x3d, r28	; 61
 544:	cf 91       	pop	r28
 546:	df 91       	pop	r29
 548:	08 95       	ret

0000054a <DIO_u8GetPinValue>:

u8  DIO_u8GetPinValue     (u8 Copy_u8PortId, u8 Copy_u8PinId ,u8 * Copy_pu8ReturnedPinValue)
{
 54a:	df 93       	push	r29
 54c:	cf 93       	push	r28
 54e:	cd b7       	in	r28, 0x3d	; 61
 550:	de b7       	in	r29, 0x3e	; 62
 552:	28 97       	sbiw	r28, 0x08	; 8
 554:	0f b6       	in	r0, 0x3f	; 63
 556:	f8 94       	cli
 558:	de bf       	out	0x3e, r29	; 62
 55a:	0f be       	out	0x3f, r0	; 63
 55c:	cd bf       	out	0x3d, r28	; 61
 55e:	8b 83       	std	Y+3, r24	; 0x03
 560:	6c 83       	std	Y+4, r22	; 0x04
 562:	5e 83       	std	Y+6, r21	; 0x06
 564:	4d 83       	std	Y+5, r20	; 0x05
	u8 Local_u8ErrorState = STD_TYPES_OK;
 566:	81 e0       	ldi	r24, 0x01	; 1
 568:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8PinValue;
	if((Copy_u8PortId <= DIO_u8_PORTD) && (Copy_u8PinId <= DIO_u8_PIN7) && (Copy_pu8ReturnedPinValue != NULL))
 56a:	8b 81       	ldd	r24, Y+3	; 0x03
 56c:	84 30       	cpi	r24, 0x04	; 4
 56e:	08 f0       	brcs	.+2      	; 0x572 <DIO_u8GetPinValue+0x28>
 570:	9f c0       	rjmp	.+318    	; 0x6b0 <DIO_u8GetPinValue+0x166>
 572:	8c 81       	ldd	r24, Y+4	; 0x04
 574:	88 30       	cpi	r24, 0x08	; 8
 576:	08 f0       	brcs	.+2      	; 0x57a <DIO_u8GetPinValue+0x30>
 578:	9b c0       	rjmp	.+310    	; 0x6b0 <DIO_u8GetPinValue+0x166>
 57a:	8d 81       	ldd	r24, Y+5	; 0x05
 57c:	9e 81       	ldd	r25, Y+6	; 0x06
 57e:	00 97       	sbiw	r24, 0x00	; 0
 580:	09 f4       	brne	.+2      	; 0x584 <DIO_u8GetPinValue+0x3a>
 582:	96 c0       	rjmp	.+300    	; 0x6b0 <DIO_u8GetPinValue+0x166>
	{
		switch (Copy_u8PortId)
 584:	8b 81       	ldd	r24, Y+3	; 0x03
 586:	28 2f       	mov	r18, r24
 588:	30 e0       	ldi	r19, 0x00	; 0
 58a:	38 87       	std	Y+8, r19	; 0x08
 58c:	2f 83       	std	Y+7, r18	; 0x07
 58e:	4f 81       	ldd	r20, Y+7	; 0x07
 590:	58 85       	ldd	r21, Y+8	; 0x08
 592:	41 30       	cpi	r20, 0x01	; 1
 594:	51 05       	cpc	r21, r1
 596:	a9 f1       	breq	.+106    	; 0x602 <DIO_u8GetPinValue+0xb8>
 598:	8f 81       	ldd	r24, Y+7	; 0x07
 59a:	98 85       	ldd	r25, Y+8	; 0x08
 59c:	82 30       	cpi	r24, 0x02	; 2
 59e:	91 05       	cpc	r25, r1
 5a0:	34 f4       	brge	.+12     	; 0x5ae <DIO_u8GetPinValue+0x64>
 5a2:	2f 81       	ldd	r18, Y+7	; 0x07
 5a4:	38 85       	ldd	r19, Y+8	; 0x08
 5a6:	21 15       	cp	r18, r1
 5a8:	31 05       	cpc	r19, r1
 5aa:	71 f0       	breq	.+28     	; 0x5c8 <DIO_u8GetPinValue+0x7e>
 5ac:	82 c0       	rjmp	.+260    	; 0x6b2 <DIO_u8GetPinValue+0x168>
 5ae:	4f 81       	ldd	r20, Y+7	; 0x07
 5b0:	58 85       	ldd	r21, Y+8	; 0x08
 5b2:	42 30       	cpi	r20, 0x02	; 2
 5b4:	51 05       	cpc	r21, r1
 5b6:	09 f4       	brne	.+2      	; 0x5ba <DIO_u8GetPinValue+0x70>
 5b8:	41 c0       	rjmp	.+130    	; 0x63c <DIO_u8GetPinValue+0xf2>
 5ba:	8f 81       	ldd	r24, Y+7	; 0x07
 5bc:	98 85       	ldd	r25, Y+8	; 0x08
 5be:	83 30       	cpi	r24, 0x03	; 3
 5c0:	91 05       	cpc	r25, r1
 5c2:	09 f4       	brne	.+2      	; 0x5c6 <DIO_u8GetPinValue+0x7c>
 5c4:	58 c0       	rjmp	.+176    	; 0x676 <DIO_u8GetPinValue+0x12c>
 5c6:	75 c0       	rjmp	.+234    	; 0x6b2 <DIO_u8GetPinValue+0x168>
		{
			case DIO_u8_PORTA:
				Local_u8PinValue = GET_BIT(DIO_u8_PINA_REG,Copy_u8PinId);
 5c8:	e9 e3       	ldi	r30, 0x39	; 57
 5ca:	f0 e0       	ldi	r31, 0x00	; 0
 5cc:	80 81       	ld	r24, Z
 5ce:	28 2f       	mov	r18, r24
 5d0:	30 e0       	ldi	r19, 0x00	; 0
 5d2:	8c 81       	ldd	r24, Y+4	; 0x04
 5d4:	88 2f       	mov	r24, r24
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	a9 01       	movw	r20, r18
 5da:	02 c0       	rjmp	.+4      	; 0x5e0 <DIO_u8GetPinValue+0x96>
 5dc:	55 95       	asr	r21
 5de:	47 95       	ror	r20
 5e0:	8a 95       	dec	r24
 5e2:	e2 f7       	brpl	.-8      	; 0x5dc <DIO_u8GetPinValue+0x92>
 5e4:	ca 01       	movw	r24, r20
 5e6:	81 70       	andi	r24, 0x01	; 1
 5e8:	89 83       	std	Y+1, r24	; 0x01
				if(Local_u8PinValue == 0)
 5ea:	89 81       	ldd	r24, Y+1	; 0x01
 5ec:	88 23       	and	r24, r24
 5ee:	21 f4       	brne	.+8      	; 0x5f8 <DIO_u8GetPinValue+0xae>
				{
					*Copy_pu8ReturnedPinValue = DIO_u8_LOW;
 5f0:	ed 81       	ldd	r30, Y+5	; 0x05
 5f2:	fe 81       	ldd	r31, Y+6	; 0x06
 5f4:	10 82       	st	Z, r1
 5f6:	5d c0       	rjmp	.+186    	; 0x6b2 <DIO_u8GetPinValue+0x168>
				}	
				else
				{
					*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;
 5f8:	ed 81       	ldd	r30, Y+5	; 0x05
 5fa:	fe 81       	ldd	r31, Y+6	; 0x06
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	80 83       	st	Z, r24
 600:	58 c0       	rjmp	.+176    	; 0x6b2 <DIO_u8GetPinValue+0x168>
				}
			break;
			case DIO_u8_PORTB:
				Local_u8PinValue = GET_BIT(DIO_u8_PINB_REG,Copy_u8PinId);
 602:	e6 e3       	ldi	r30, 0x36	; 54
 604:	f0 e0       	ldi	r31, 0x00	; 0
 606:	80 81       	ld	r24, Z
 608:	28 2f       	mov	r18, r24
 60a:	30 e0       	ldi	r19, 0x00	; 0
 60c:	8c 81       	ldd	r24, Y+4	; 0x04
 60e:	88 2f       	mov	r24, r24
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	a9 01       	movw	r20, r18
 614:	02 c0       	rjmp	.+4      	; 0x61a <DIO_u8GetPinValue+0xd0>
 616:	55 95       	asr	r21
 618:	47 95       	ror	r20
 61a:	8a 95       	dec	r24
 61c:	e2 f7       	brpl	.-8      	; 0x616 <DIO_u8GetPinValue+0xcc>
 61e:	ca 01       	movw	r24, r20
 620:	81 70       	andi	r24, 0x01	; 1
 622:	89 83       	std	Y+1, r24	; 0x01
				if(Local_u8PinValue == 0)
 624:	89 81       	ldd	r24, Y+1	; 0x01
 626:	88 23       	and	r24, r24
 628:	21 f4       	brne	.+8      	; 0x632 <DIO_u8GetPinValue+0xe8>
				{
					*Copy_pu8ReturnedPinValue = DIO_u8_LOW;
 62a:	ed 81       	ldd	r30, Y+5	; 0x05
 62c:	fe 81       	ldd	r31, Y+6	; 0x06
 62e:	10 82       	st	Z, r1
 630:	40 c0       	rjmp	.+128    	; 0x6b2 <DIO_u8GetPinValue+0x168>
				}	
				else
				{
					*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;
 632:	ed 81       	ldd	r30, Y+5	; 0x05
 634:	fe 81       	ldd	r31, Y+6	; 0x06
 636:	81 e0       	ldi	r24, 0x01	; 1
 638:	80 83       	st	Z, r24
 63a:	3b c0       	rjmp	.+118    	; 0x6b2 <DIO_u8GetPinValue+0x168>
				}
			break;
			case DIO_u8_PORTC:
				Local_u8PinValue = GET_BIT(DIO_u8_PINC_REG,Copy_u8PinId);
 63c:	e3 e3       	ldi	r30, 0x33	; 51
 63e:	f0 e0       	ldi	r31, 0x00	; 0
 640:	80 81       	ld	r24, Z
 642:	28 2f       	mov	r18, r24
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	8c 81       	ldd	r24, Y+4	; 0x04
 648:	88 2f       	mov	r24, r24
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	a9 01       	movw	r20, r18
 64e:	02 c0       	rjmp	.+4      	; 0x654 <DIO_u8GetPinValue+0x10a>
 650:	55 95       	asr	r21
 652:	47 95       	ror	r20
 654:	8a 95       	dec	r24
 656:	e2 f7       	brpl	.-8      	; 0x650 <DIO_u8GetPinValue+0x106>
 658:	ca 01       	movw	r24, r20
 65a:	81 70       	andi	r24, 0x01	; 1
 65c:	89 83       	std	Y+1, r24	; 0x01
				if(Local_u8PinValue == 0)
 65e:	89 81       	ldd	r24, Y+1	; 0x01
 660:	88 23       	and	r24, r24
 662:	21 f4       	brne	.+8      	; 0x66c <DIO_u8GetPinValue+0x122>
				{
					*Copy_pu8ReturnedPinValue = DIO_u8_LOW;
 664:	ed 81       	ldd	r30, Y+5	; 0x05
 666:	fe 81       	ldd	r31, Y+6	; 0x06
 668:	10 82       	st	Z, r1
 66a:	23 c0       	rjmp	.+70     	; 0x6b2 <DIO_u8GetPinValue+0x168>
				}	
				else
				{
					*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;
 66c:	ed 81       	ldd	r30, Y+5	; 0x05
 66e:	fe 81       	ldd	r31, Y+6	; 0x06
 670:	81 e0       	ldi	r24, 0x01	; 1
 672:	80 83       	st	Z, r24
 674:	1e c0       	rjmp	.+60     	; 0x6b2 <DIO_u8GetPinValue+0x168>
				}
			break;
			case DIO_u8_PORTD:
				Local_u8PinValue = GET_BIT(DIO_u8_PIND_REG,Copy_u8PinId);
 676:	e0 e3       	ldi	r30, 0x30	; 48
 678:	f0 e0       	ldi	r31, 0x00	; 0
 67a:	80 81       	ld	r24, Z
 67c:	28 2f       	mov	r18, r24
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	8c 81       	ldd	r24, Y+4	; 0x04
 682:	88 2f       	mov	r24, r24
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	a9 01       	movw	r20, r18
 688:	02 c0       	rjmp	.+4      	; 0x68e <DIO_u8GetPinValue+0x144>
 68a:	55 95       	asr	r21
 68c:	47 95       	ror	r20
 68e:	8a 95       	dec	r24
 690:	e2 f7       	brpl	.-8      	; 0x68a <DIO_u8GetPinValue+0x140>
 692:	ca 01       	movw	r24, r20
 694:	81 70       	andi	r24, 0x01	; 1
 696:	89 83       	std	Y+1, r24	; 0x01
				if(Local_u8PinValue == 0)
 698:	89 81       	ldd	r24, Y+1	; 0x01
 69a:	88 23       	and	r24, r24
 69c:	21 f4       	brne	.+8      	; 0x6a6 <DIO_u8GetPinValue+0x15c>
				{
					*Copy_pu8ReturnedPinValue = DIO_u8_LOW;
 69e:	ed 81       	ldd	r30, Y+5	; 0x05
 6a0:	fe 81       	ldd	r31, Y+6	; 0x06
 6a2:	10 82       	st	Z, r1
 6a4:	06 c0       	rjmp	.+12     	; 0x6b2 <DIO_u8GetPinValue+0x168>
				}	
				else
				{
					*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;
 6a6:	ed 81       	ldd	r30, Y+5	; 0x05
 6a8:	fe 81       	ldd	r31, Y+6	; 0x06
 6aa:	81 e0       	ldi	r24, 0x01	; 1
 6ac:	80 83       	st	Z, r24
 6ae:	01 c0       	rjmp	.+2      	; 0x6b2 <DIO_u8GetPinValue+0x168>
			break;
		}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
 6b0:	1a 82       	std	Y+2, r1	; 0x02
	}
	return Local_u8ErrorState;
 6b2:	8a 81       	ldd	r24, Y+2	; 0x02
}
 6b4:	28 96       	adiw	r28, 0x08	; 8
 6b6:	0f b6       	in	r0, 0x3f	; 63
 6b8:	f8 94       	cli
 6ba:	de bf       	out	0x3e, r29	; 62
 6bc:	0f be       	out	0x3f, r0	; 63
 6be:	cd bf       	out	0x3d, r28	; 61
 6c0:	cf 91       	pop	r28
 6c2:	df 91       	pop	r29
 6c4:	08 95       	ret

000006c6 <DIO_u8SetPortDirection>:

u8  DIO_u8SetPortDirection(u8 Copy_u8PortId, u8 Copy_u8PortDirection)
{
 6c6:	df 93       	push	r29
 6c8:	cf 93       	push	r28
 6ca:	cd b7       	in	r28, 0x3d	; 61
 6cc:	de b7       	in	r29, 0x3e	; 62
 6ce:	2d 97       	sbiw	r28, 0x0d	; 13
 6d0:	0f b6       	in	r0, 0x3f	; 63
 6d2:	f8 94       	cli
 6d4:	de bf       	out	0x3e, r29	; 62
 6d6:	0f be       	out	0x3f, r0	; 63
 6d8:	cd bf       	out	0x3d, r28	; 61
 6da:	8a 83       	std	Y+2, r24	; 0x02
 6dc:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
 6de:	81 e0       	ldi	r24, 0x01	; 1
 6e0:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_u8PortDirection == DIO_u8_OUTPUT) || (Copy_u8PortDirection == DIO_u8_INPUT))
 6e2:	8b 81       	ldd	r24, Y+3	; 0x03
 6e4:	81 30       	cpi	r24, 0x01	; 1
 6e6:	21 f0       	breq	.+8      	; 0x6f0 <DIO_u8SetPortDirection+0x2a>
 6e8:	8b 81       	ldd	r24, Y+3	; 0x03
 6ea:	88 23       	and	r24, r24
 6ec:	09 f0       	breq	.+2      	; 0x6f0 <DIO_u8SetPortDirection+0x2a>
 6ee:	7f c0       	rjmp	.+254    	; 0x7ee <DIO_u8SetPortDirection+0x128>
	{
		switch (Copy_u8PortId)
 6f0:	8a 81       	ldd	r24, Y+2	; 0x02
 6f2:	28 2f       	mov	r18, r24
 6f4:	30 e0       	ldi	r19, 0x00	; 0
 6f6:	3d 87       	std	Y+13, r19	; 0x0d
 6f8:	2c 87       	std	Y+12, r18	; 0x0c
 6fa:	8c 85       	ldd	r24, Y+12	; 0x0c
 6fc:	9d 85       	ldd	r25, Y+13	; 0x0d
 6fe:	81 30       	cpi	r24, 0x01	; 1
 700:	91 05       	cpc	r25, r1
 702:	71 f1       	breq	.+92     	; 0x760 <DIO_u8SetPortDirection+0x9a>
 704:	2c 85       	ldd	r18, Y+12	; 0x0c
 706:	3d 85       	ldd	r19, Y+13	; 0x0d
 708:	22 30       	cpi	r18, 0x02	; 2
 70a:	31 05       	cpc	r19, r1
 70c:	2c f4       	brge	.+10     	; 0x718 <DIO_u8SetPortDirection+0x52>
 70e:	8c 85       	ldd	r24, Y+12	; 0x0c
 710:	9d 85       	ldd	r25, Y+13	; 0x0d
 712:	00 97       	sbiw	r24, 0x00	; 0
 714:	69 f0       	breq	.+26     	; 0x730 <DIO_u8SetPortDirection+0x6a>
 716:	69 c0       	rjmp	.+210    	; 0x7ea <DIO_u8SetPortDirection+0x124>
 718:	2c 85       	ldd	r18, Y+12	; 0x0c
 71a:	3d 85       	ldd	r19, Y+13	; 0x0d
 71c:	22 30       	cpi	r18, 0x02	; 2
 71e:	31 05       	cpc	r19, r1
 720:	b1 f1       	breq	.+108    	; 0x78e <DIO_u8SetPortDirection+0xc8>
 722:	8c 85       	ldd	r24, Y+12	; 0x0c
 724:	9d 85       	ldd	r25, Y+13	; 0x0d
 726:	83 30       	cpi	r24, 0x03	; 3
 728:	91 05       	cpc	r25, r1
 72a:	09 f4       	brne	.+2      	; 0x72e <DIO_u8SetPortDirection+0x68>
 72c:	47 c0       	rjmp	.+142    	; 0x7bc <DIO_u8SetPortDirection+0xf6>
 72e:	5d c0       	rjmp	.+186    	; 0x7ea <DIO_u8SetPortDirection+0x124>
		{
			case DIO_u8_PORTA:
				switch (Copy_u8PortDirection)
 730:	8b 81       	ldd	r24, Y+3	; 0x03
 732:	28 2f       	mov	r18, r24
 734:	30 e0       	ldi	r19, 0x00	; 0
 736:	3b 87       	std	Y+11, r19	; 0x0b
 738:	2a 87       	std	Y+10, r18	; 0x0a
 73a:	8a 85       	ldd	r24, Y+10	; 0x0a
 73c:	9b 85       	ldd	r25, Y+11	; 0x0b
 73e:	00 97       	sbiw	r24, 0x00	; 0
 740:	59 f0       	breq	.+22     	; 0x758 <DIO_u8SetPortDirection+0x92>
 742:	2a 85       	ldd	r18, Y+10	; 0x0a
 744:	3b 85       	ldd	r19, Y+11	; 0x0b
 746:	21 30       	cpi	r18, 0x01	; 1
 748:	31 05       	cpc	r19, r1
 74a:	09 f0       	breq	.+2      	; 0x74e <DIO_u8SetPortDirection+0x88>
 74c:	51 c0       	rjmp	.+162    	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
				{
					case DIO_u8_OUTPUT:DIO_u8_DDRA_REG = 0xff;break;
 74e:	ea e3       	ldi	r30, 0x3A	; 58
 750:	f0 e0       	ldi	r31, 0x00	; 0
 752:	8f ef       	ldi	r24, 0xFF	; 255
 754:	80 83       	st	Z, r24
 756:	4c c0       	rjmp	.+152    	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
					case DIO_u8_INPUT :DIO_u8_DDRA_REG = 0x00;break;
 758:	ea e3       	ldi	r30, 0x3A	; 58
 75a:	f0 e0       	ldi	r31, 0x00	; 0
 75c:	10 82       	st	Z, r1
 75e:	48 c0       	rjmp	.+144    	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
				}
			break;
			case DIO_u8_PORTB:
				switch (Copy_u8PortDirection)
 760:	8b 81       	ldd	r24, Y+3	; 0x03
 762:	28 2f       	mov	r18, r24
 764:	30 e0       	ldi	r19, 0x00	; 0
 766:	39 87       	std	Y+9, r19	; 0x09
 768:	28 87       	std	Y+8, r18	; 0x08
 76a:	88 85       	ldd	r24, Y+8	; 0x08
 76c:	99 85       	ldd	r25, Y+9	; 0x09
 76e:	00 97       	sbiw	r24, 0x00	; 0
 770:	51 f0       	breq	.+20     	; 0x786 <DIO_u8SetPortDirection+0xc0>
 772:	28 85       	ldd	r18, Y+8	; 0x08
 774:	39 85       	ldd	r19, Y+9	; 0x09
 776:	21 30       	cpi	r18, 0x01	; 1
 778:	31 05       	cpc	r19, r1
 77a:	d1 f5       	brne	.+116    	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
				{
					case DIO_u8_OUTPUT:DIO_u8_DDRB_REG = 0xff;break;
 77c:	e7 e3       	ldi	r30, 0x37	; 55
 77e:	f0 e0       	ldi	r31, 0x00	; 0
 780:	8f ef       	ldi	r24, 0xFF	; 255
 782:	80 83       	st	Z, r24
 784:	35 c0       	rjmp	.+106    	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
					case DIO_u8_INPUT :DIO_u8_DDRB_REG = 0x00;break;
 786:	e7 e3       	ldi	r30, 0x37	; 55
 788:	f0 e0       	ldi	r31, 0x00	; 0
 78a:	10 82       	st	Z, r1
 78c:	31 c0       	rjmp	.+98     	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
				}
			break;
			case DIO_u8_PORTC:
				switch (Copy_u8PortDirection)
 78e:	8b 81       	ldd	r24, Y+3	; 0x03
 790:	28 2f       	mov	r18, r24
 792:	30 e0       	ldi	r19, 0x00	; 0
 794:	3f 83       	std	Y+7, r19	; 0x07
 796:	2e 83       	std	Y+6, r18	; 0x06
 798:	8e 81       	ldd	r24, Y+6	; 0x06
 79a:	9f 81       	ldd	r25, Y+7	; 0x07
 79c:	00 97       	sbiw	r24, 0x00	; 0
 79e:	51 f0       	breq	.+20     	; 0x7b4 <DIO_u8SetPortDirection+0xee>
 7a0:	2e 81       	ldd	r18, Y+6	; 0x06
 7a2:	3f 81       	ldd	r19, Y+7	; 0x07
 7a4:	21 30       	cpi	r18, 0x01	; 1
 7a6:	31 05       	cpc	r19, r1
 7a8:	19 f5       	brne	.+70     	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
				{
					case DIO_u8_OUTPUT:DIO_u8_DDRC_REG = 0xff;break;
 7aa:	e4 e3       	ldi	r30, 0x34	; 52
 7ac:	f0 e0       	ldi	r31, 0x00	; 0
 7ae:	8f ef       	ldi	r24, 0xFF	; 255
 7b0:	80 83       	st	Z, r24
 7b2:	1e c0       	rjmp	.+60     	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
					case DIO_u8_INPUT :DIO_u8_DDRC_REG = 0x00;break;
 7b4:	e4 e3       	ldi	r30, 0x34	; 52
 7b6:	f0 e0       	ldi	r31, 0x00	; 0
 7b8:	10 82       	st	Z, r1
 7ba:	1a c0       	rjmp	.+52     	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
				}
			break;
			case DIO_u8_PORTD:
				switch (Copy_u8PortDirection)
 7bc:	8b 81       	ldd	r24, Y+3	; 0x03
 7be:	28 2f       	mov	r18, r24
 7c0:	30 e0       	ldi	r19, 0x00	; 0
 7c2:	3d 83       	std	Y+5, r19	; 0x05
 7c4:	2c 83       	std	Y+4, r18	; 0x04
 7c6:	8c 81       	ldd	r24, Y+4	; 0x04
 7c8:	9d 81       	ldd	r25, Y+5	; 0x05
 7ca:	00 97       	sbiw	r24, 0x00	; 0
 7cc:	51 f0       	breq	.+20     	; 0x7e2 <DIO_u8SetPortDirection+0x11c>
 7ce:	2c 81       	ldd	r18, Y+4	; 0x04
 7d0:	3d 81       	ldd	r19, Y+5	; 0x05
 7d2:	21 30       	cpi	r18, 0x01	; 1
 7d4:	31 05       	cpc	r19, r1
 7d6:	61 f4       	brne	.+24     	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
				{
					case DIO_u8_OUTPUT:DIO_u8_DDRD_REG = 0xff;break;
 7d8:	e1 e3       	ldi	r30, 0x31	; 49
 7da:	f0 e0       	ldi	r31, 0x00	; 0
 7dc:	8f ef       	ldi	r24, 0xFF	; 255
 7de:	80 83       	st	Z, r24
 7e0:	07 c0       	rjmp	.+14     	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
					case DIO_u8_INPUT :DIO_u8_DDRD_REG = 0x00;break;
 7e2:	e1 e3       	ldi	r30, 0x31	; 49
 7e4:	f0 e0       	ldi	r31, 0x00	; 0
 7e6:	10 82       	st	Z, r1
 7e8:	03 c0       	rjmp	.+6      	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
				}
			break;
			default :Local_u8ErrorState = STD_TYPES_NOK;
 7ea:	19 82       	std	Y+1, r1	; 0x01
 7ec:	01 c0       	rjmp	.+2      	; 0x7f0 <DIO_u8SetPortDirection+0x12a>
		}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
 7ee:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
 7f0:	89 81       	ldd	r24, Y+1	; 0x01
}
 7f2:	2d 96       	adiw	r28, 0x0d	; 13
 7f4:	0f b6       	in	r0, 0x3f	; 63
 7f6:	f8 94       	cli
 7f8:	de bf       	out	0x3e, r29	; 62
 7fa:	0f be       	out	0x3f, r0	; 63
 7fc:	cd bf       	out	0x3d, r28	; 61
 7fe:	cf 91       	pop	r28
 800:	df 91       	pop	r29
 802:	08 95       	ret

00000804 <DIO_u8SetPortValue>:

u8  DIO_u8SetPortValue    (u8 Copy_u8PortId, u8 Copy_u8PortValue)
{
 804:	df 93       	push	r29
 806:	cf 93       	push	r28
 808:	00 d0       	rcall	.+0      	; 0x80a <DIO_u8SetPortValue+0x6>
 80a:	00 d0       	rcall	.+0      	; 0x80c <DIO_u8SetPortValue+0x8>
 80c:	0f 92       	push	r0
 80e:	cd b7       	in	r28, 0x3d	; 61
 810:	de b7       	in	r29, 0x3e	; 62
 812:	8a 83       	std	Y+2, r24	; 0x02
 814:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
 816:	81 e0       	ldi	r24, 0x01	; 1
 818:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8PortId)
 81a:	8a 81       	ldd	r24, Y+2	; 0x02
 81c:	28 2f       	mov	r18, r24
 81e:	30 e0       	ldi	r19, 0x00	; 0
 820:	3d 83       	std	Y+5, r19	; 0x05
 822:	2c 83       	std	Y+4, r18	; 0x04
 824:	8c 81       	ldd	r24, Y+4	; 0x04
 826:	9d 81       	ldd	r25, Y+5	; 0x05
 828:	81 30       	cpi	r24, 0x01	; 1
 82a:	91 05       	cpc	r25, r1
 82c:	d1 f0       	breq	.+52     	; 0x862 <__stack+0x3>
 82e:	2c 81       	ldd	r18, Y+4	; 0x04
 830:	3d 81       	ldd	r19, Y+5	; 0x05
 832:	22 30       	cpi	r18, 0x02	; 2
 834:	31 05       	cpc	r19, r1
 836:	2c f4       	brge	.+10     	; 0x842 <DIO_u8SetPortValue+0x3e>
 838:	8c 81       	ldd	r24, Y+4	; 0x04
 83a:	9d 81       	ldd	r25, Y+5	; 0x05
 83c:	00 97       	sbiw	r24, 0x00	; 0
 83e:	61 f0       	breq	.+24     	; 0x858 <DIO_u8SetPortValue+0x54>
 840:	1f c0       	rjmp	.+62     	; 0x880 <__stack+0x21>
 842:	2c 81       	ldd	r18, Y+4	; 0x04
 844:	3d 81       	ldd	r19, Y+5	; 0x05
 846:	22 30       	cpi	r18, 0x02	; 2
 848:	31 05       	cpc	r19, r1
 84a:	81 f0       	breq	.+32     	; 0x86c <__stack+0xd>
 84c:	8c 81       	ldd	r24, Y+4	; 0x04
 84e:	9d 81       	ldd	r25, Y+5	; 0x05
 850:	83 30       	cpi	r24, 0x03	; 3
 852:	91 05       	cpc	r25, r1
 854:	81 f0       	breq	.+32     	; 0x876 <__stack+0x17>
 856:	14 c0       	rjmp	.+40     	; 0x880 <__stack+0x21>
	{
		case DIO_u8_PORTA:DIO_u8_PORTA_REG = Copy_u8PortValue;break;
 858:	eb e3       	ldi	r30, 0x3B	; 59
 85a:	f0 e0       	ldi	r31, 0x00	; 0
 85c:	8b 81       	ldd	r24, Y+3	; 0x03
 85e:	80 83       	st	Z, r24
 860:	10 c0       	rjmp	.+32     	; 0x882 <__stack+0x23>
		case DIO_u8_PORTB:DIO_u8_PORTB_REG = Copy_u8PortValue;break;
 862:	e8 e3       	ldi	r30, 0x38	; 56
 864:	f0 e0       	ldi	r31, 0x00	; 0
 866:	8b 81       	ldd	r24, Y+3	; 0x03
 868:	80 83       	st	Z, r24
 86a:	0b c0       	rjmp	.+22     	; 0x882 <__stack+0x23>
		case DIO_u8_PORTC:DIO_u8_PORTC_REG = Copy_u8PortValue;break;
 86c:	e5 e3       	ldi	r30, 0x35	; 53
 86e:	f0 e0       	ldi	r31, 0x00	; 0
 870:	8b 81       	ldd	r24, Y+3	; 0x03
 872:	80 83       	st	Z, r24
 874:	06 c0       	rjmp	.+12     	; 0x882 <__stack+0x23>
		case DIO_u8_PORTD:DIO_u8_PORTD_REG = Copy_u8PortValue;break;
 876:	e2 e3       	ldi	r30, 0x32	; 50
 878:	f0 e0       	ldi	r31, 0x00	; 0
 87a:	8b 81       	ldd	r24, Y+3	; 0x03
 87c:	80 83       	st	Z, r24
 87e:	01 c0       	rjmp	.+2      	; 0x882 <__stack+0x23>
		default : Local_u8ErrorState = STD_TYPES_NOK;
 880:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
 882:	89 81       	ldd	r24, Y+1	; 0x01
}
 884:	0f 90       	pop	r0
 886:	0f 90       	pop	r0
 888:	0f 90       	pop	r0
 88a:	0f 90       	pop	r0
 88c:	0f 90       	pop	r0
 88e:	cf 91       	pop	r28
 890:	df 91       	pop	r29
 892:	08 95       	ret

00000894 <DIO_u8GetPortValue>:

u8  DIO_u8GetPortValue    (u8 Copy_u8PortId, u8 * Copy_pu8ReturnedPortValue)
{
 894:	df 93       	push	r29
 896:	cf 93       	push	r28
 898:	00 d0       	rcall	.+0      	; 0x89a <DIO_u8GetPortValue+0x6>
 89a:	00 d0       	rcall	.+0      	; 0x89c <DIO_u8GetPortValue+0x8>
 89c:	00 d0       	rcall	.+0      	; 0x89e <DIO_u8GetPortValue+0xa>
 89e:	cd b7       	in	r28, 0x3d	; 61
 8a0:	de b7       	in	r29, 0x3e	; 62
 8a2:	8a 83       	std	Y+2, r24	; 0x02
 8a4:	7c 83       	std	Y+4, r23	; 0x04
 8a6:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
 8a8:	81 e0       	ldi	r24, 0x01	; 1
 8aa:	89 83       	std	Y+1, r24	; 0x01
	if( Copy_pu8ReturnedPortValue != NULL)
 8ac:	8b 81       	ldd	r24, Y+3	; 0x03
 8ae:	9c 81       	ldd	r25, Y+4	; 0x04
 8b0:	00 97       	sbiw	r24, 0x00	; 0
 8b2:	e9 f1       	breq	.+122    	; 0x92e <DIO_u8GetPortValue+0x9a>
	{
		switch (Copy_u8PortId)
 8b4:	8a 81       	ldd	r24, Y+2	; 0x02
 8b6:	28 2f       	mov	r18, r24
 8b8:	30 e0       	ldi	r19, 0x00	; 0
 8ba:	3e 83       	std	Y+6, r19	; 0x06
 8bc:	2d 83       	std	Y+5, r18	; 0x05
 8be:	8d 81       	ldd	r24, Y+5	; 0x05
 8c0:	9e 81       	ldd	r25, Y+6	; 0x06
 8c2:	81 30       	cpi	r24, 0x01	; 1
 8c4:	91 05       	cpc	r25, r1
 8c6:	e1 f0       	breq	.+56     	; 0x900 <DIO_u8GetPortValue+0x6c>
 8c8:	2d 81       	ldd	r18, Y+5	; 0x05
 8ca:	3e 81       	ldd	r19, Y+6	; 0x06
 8cc:	22 30       	cpi	r18, 0x02	; 2
 8ce:	31 05       	cpc	r19, r1
 8d0:	2c f4       	brge	.+10     	; 0x8dc <DIO_u8GetPortValue+0x48>
 8d2:	8d 81       	ldd	r24, Y+5	; 0x05
 8d4:	9e 81       	ldd	r25, Y+6	; 0x06
 8d6:	00 97       	sbiw	r24, 0x00	; 0
 8d8:	61 f0       	breq	.+24     	; 0x8f2 <DIO_u8GetPortValue+0x5e>
 8da:	27 c0       	rjmp	.+78     	; 0x92a <DIO_u8GetPortValue+0x96>
 8dc:	2d 81       	ldd	r18, Y+5	; 0x05
 8de:	3e 81       	ldd	r19, Y+6	; 0x06
 8e0:	22 30       	cpi	r18, 0x02	; 2
 8e2:	31 05       	cpc	r19, r1
 8e4:	a1 f0       	breq	.+40     	; 0x90e <DIO_u8GetPortValue+0x7a>
 8e6:	8d 81       	ldd	r24, Y+5	; 0x05
 8e8:	9e 81       	ldd	r25, Y+6	; 0x06
 8ea:	83 30       	cpi	r24, 0x03	; 3
 8ec:	91 05       	cpc	r25, r1
 8ee:	b1 f0       	breq	.+44     	; 0x91c <DIO_u8GetPortValue+0x88>
 8f0:	1c c0       	rjmp	.+56     	; 0x92a <DIO_u8GetPortValue+0x96>
		{
			case DIO_u8_PORTA: *Copy_pu8ReturnedPortValue = DIO_u8_PINA_REG;break;
 8f2:	e9 e3       	ldi	r30, 0x39	; 57
 8f4:	f0 e0       	ldi	r31, 0x00	; 0
 8f6:	80 81       	ld	r24, Z
 8f8:	eb 81       	ldd	r30, Y+3	; 0x03
 8fa:	fc 81       	ldd	r31, Y+4	; 0x04
 8fc:	80 83       	st	Z, r24
 8fe:	18 c0       	rjmp	.+48     	; 0x930 <DIO_u8GetPortValue+0x9c>
			case DIO_u8_PORTB: *Copy_pu8ReturnedPortValue = DIO_u8_PINB_REG;break;
 900:	e6 e3       	ldi	r30, 0x36	; 54
 902:	f0 e0       	ldi	r31, 0x00	; 0
 904:	80 81       	ld	r24, Z
 906:	eb 81       	ldd	r30, Y+3	; 0x03
 908:	fc 81       	ldd	r31, Y+4	; 0x04
 90a:	80 83       	st	Z, r24
 90c:	11 c0       	rjmp	.+34     	; 0x930 <DIO_u8GetPortValue+0x9c>
			case DIO_u8_PORTC: *Copy_pu8ReturnedPortValue = DIO_u8_PINC_REG;break;
 90e:	e3 e3       	ldi	r30, 0x33	; 51
 910:	f0 e0       	ldi	r31, 0x00	; 0
 912:	80 81       	ld	r24, Z
 914:	eb 81       	ldd	r30, Y+3	; 0x03
 916:	fc 81       	ldd	r31, Y+4	; 0x04
 918:	80 83       	st	Z, r24
 91a:	0a c0       	rjmp	.+20     	; 0x930 <DIO_u8GetPortValue+0x9c>
			case DIO_u8_PORTD: *Copy_pu8ReturnedPortValue = DIO_u8_PIND_REG;break;
 91c:	e0 e3       	ldi	r30, 0x30	; 48
 91e:	f0 e0       	ldi	r31, 0x00	; 0
 920:	80 81       	ld	r24, Z
 922:	eb 81       	ldd	r30, Y+3	; 0x03
 924:	fc 81       	ldd	r31, Y+4	; 0x04
 926:	80 83       	st	Z, r24
 928:	03 c0       	rjmp	.+6      	; 0x930 <DIO_u8GetPortValue+0x9c>
			default : Local_u8ErrorState = STD_TYPES_NOK;
 92a:	19 82       	std	Y+1, r1	; 0x01
 92c:	01 c0       	rjmp	.+2      	; 0x930 <DIO_u8GetPortValue+0x9c>
		}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
 92e:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
 930:	89 81       	ldd	r24, Y+1	; 0x01
 932:	26 96       	adiw	r28, 0x06	; 6
 934:	0f b6       	in	r0, 0x3f	; 63
 936:	f8 94       	cli
 938:	de bf       	out	0x3e, r29	; 62
 93a:	0f be       	out	0x3f, r0	; 63
 93c:	cd bf       	out	0x3d, r28	; 61
 93e:	cf 91       	pop	r28
 940:	df 91       	pop	r29
 942:	08 95       	ret

00000944 <main>:

/* MCAL */
#include "DIO_interface.h"


int main(){
 944:	df 93       	push	r29
 946:	cf 93       	push	r28
 948:	cd b7       	in	r28, 0x3d	; 61
 94a:	de b7       	in	r29, 0x3e	; 62

	DIO_u8SetPinDirection(DIO_u8_PORTA,DIO_u8_PIN0,DIO_u8_OUTPUT);
 94c:	80 e0       	ldi	r24, 0x00	; 0
 94e:	60 e0       	ldi	r22, 0x00	; 0
 950:	41 e0       	ldi	r20, 0x01	; 1
 952:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_u8SetPinDirection>
	DIO_u8SetPinValue(DIO_u8_PORTA,DIO_u8_PIN0,DIO_u8_HIGH);
 956:	80 e0       	ldi	r24, 0x00	; 0
 958:	60 e0       	ldi	r22, 0x00	; 0
 95a:	41 e0       	ldi	r20, 0x01	; 1
 95c:	0e 94 7f 01 	call	0x2fe	; 0x2fe <DIO_u8SetPinValue>

	DIO_u8SetPinDirection(DIO_u8_PORTB,DIO_u8_PIN0,DIO_u8_OUTPUT);
 960:	81 e0       	ldi	r24, 0x01	; 1
 962:	60 e0       	ldi	r22, 0x00	; 0
 964:	41 e0       	ldi	r20, 0x01	; 1
 966:	0e 94 55 00 	call	0xaa	; 0xaa <DIO_u8SetPinDirection>
	DIO_u8SetPinValue(DIO_u8_PORTB,DIO_u8_PIN0,DIO_u8_HIGH);
 96a:	81 e0       	ldi	r24, 0x01	; 1
 96c:	60 e0       	ldi	r22, 0x00	; 0
 96e:	41 e0       	ldi	r20, 0x01	; 1
 970:	0e 94 7f 01 	call	0x2fe	; 0x2fe <DIO_u8SetPinValue>



	return 0;
 974:	80 e0       	ldi	r24, 0x00	; 0
 976:	90 e0       	ldi	r25, 0x00	; 0
}
 978:	cf 91       	pop	r28
 97a:	df 91       	pop	r29
 97c:	08 95       	ret

0000097e <_exit>:
 97e:	f8 94       	cli

00000980 <__stop_program>:
 980:	ff cf       	rjmp	.-2      	; 0x980 <__stop_program>
